{
  "version": 3,
  "sources": ["../chartjs-adapter-luxon/dist/chartjs-adapter-luxon.esm.js"],
  "sourcesContent": ["/*!\n * chartjs-adapter-luxon v1.1.0\n * https://www.chartjs.org\n * (c) 2021 chartjs-adapter-luxon Contributors\n * Released under the MIT license\n */\nimport { _adapters } from 'chart.js';\nimport { DateTime } from 'luxon';\n\nconst FORMATS = {\n  datetime: DateTime.DATETIME_MED_WITH_SECONDS,\n  millisecond: 'h:mm:ss.SSS a',\n  second: DateTime.TIME_WITH_SECONDS,\n  minute: DateTime.TIME_SIMPLE,\n  hour: {hour: 'numeric'},\n  day: {day: 'numeric', month: 'short'},\n  week: 'DD',\n  month: {month: 'short', year: 'numeric'},\n  quarter: \"'Q'q - yyyy\",\n  year: {year: 'numeric'}\n};\n\n_adapters._date.override({\n  _id: 'luxon', // DEBUG\n\n  /**\n   * @private\n   */\n  _create: function(time) {\n    return DateTime.fromMillis(time, this.options);\n  },\n\n  formats: function() {\n    return FORMATS;\n  },\n\n  parse: function(value, format) {\n    const options = this.options;\n\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n\n    const type = typeof value;\n    if (type === 'number') {\n      value = this._create(value);\n    } else if (type === 'string') {\n      if (typeof format === 'string') {\n        value = DateTime.fromFormat(value, format, options);\n      } else {\n        value = DateTime.fromISO(value, options);\n      }\n    } else if (value instanceof Date) {\n      value = DateTime.fromJSDate(value, options);\n    } else if (type === 'object' && !(value instanceof DateTime)) {\n      value = DateTime.fromObject(value);\n    }\n\n    return value.isValid ? value.valueOf() : null;\n  },\n\n  format: function(time, format) {\n    const datetime = this._create(time);\n    return typeof format === 'string'\n      ? datetime.toFormat(format, this.options)\n      : datetime.toLocaleString(format);\n  },\n\n  add: function(time, amount, unit) {\n    const args = {};\n    args[unit] = amount;\n    return this._create(time).plus(args).valueOf();\n  },\n\n  diff: function(max, min, unit) {\n    return this._create(max).diff(this._create(min)).as(unit).valueOf();\n  },\n\n  startOf: function(time, unit, weekday) {\n    if (unit === 'isoWeek') {\n      weekday = Math.trunc(Math.min(Math.max(0, weekday), 6));\n      const dateTime = this._create(time);\n      return dateTime.minus({days: (dateTime.weekday - weekday + 7) % 7}).startOf('day').valueOf();\n    }\n    return unit ? this._create(time).startOf(unit).valueOf() : time;\n  },\n\n  endOf: function(time, unit) {\n    return this._create(time).endOf(unit).valueOf();\n  }\n});\n"],
  "mappings": ";;;;;;;;;AAAA,AASA,IAAM,UAAU;AAAA,EACd,UAAU,SAAS;AAAA,EACnB,aAAa;AAAA,EACb,QAAQ,SAAS;AAAA,EACjB,QAAQ,SAAS;AAAA,EACjB,MAAM,EAAC,MAAM;AAAA,EACb,KAAK,EAAC,KAAK,WAAW,OAAO;AAAA,EAC7B,MAAM;AAAA,EACN,OAAO,EAAC,OAAO,SAAS,MAAM;AAAA,EAC9B,SAAS;AAAA,EACT,MAAM,EAAC,MAAM;AAAA;AAGf,SAAU,MAAM,SAAS;AAAA,EACvB,KAAK;AAAA,EAKL,SAAS,SAAS,MAAM;AACtB,WAAO,SAAS,WAAW,MAAM,KAAK;AAAA;AAAA,EAGxC,SAAS,WAAW;AAClB,WAAO;AAAA;AAAA,EAGT,OAAO,SAAS,OAAO,QAAQ;AAC7B,UAAM,UAAU,KAAK;AAErB,QAAI,UAAU,QAAQ,OAAO,UAAU,aAAa;AAClD,aAAO;AAAA;AAGT,UAAM,OAAO,OAAO;AACpB,QAAI,SAAS,UAAU;AACrB,cAAQ,KAAK,QAAQ;AAAA,eACZ,SAAS,UAAU;AAC5B,UAAI,OAAO,WAAW,UAAU;AAC9B,gBAAQ,SAAS,WAAW,OAAO,QAAQ;AAAA,aACtC;AACL,gBAAQ,SAAS,QAAQ,OAAO;AAAA;AAAA,eAEzB,iBAAiB,MAAM;AAChC,cAAQ,SAAS,WAAW,OAAO;AAAA,eAC1B,SAAS,YAAY,CAAE,kBAAiB,WAAW;AAC5D,cAAQ,SAAS,WAAW;AAAA;AAG9B,WAAO,MAAM,UAAU,MAAM,YAAY;AAAA;AAAA,EAG3C,QAAQ,SAAS,MAAM,QAAQ;AAC7B,UAAM,WAAW,KAAK,QAAQ;AAC9B,WAAO,OAAO,WAAW,WACrB,SAAS,SAAS,QAAQ,KAAK,WAC/B,SAAS,eAAe;AAAA;AAAA,EAG9B,KAAK,SAAS,MAAM,QAAQ,MAAM;AAChC,UAAM,OAAO;AACb,SAAK,QAAQ;AACb,WAAO,KAAK,QAAQ,MAAM,KAAK,MAAM;AAAA;AAAA,EAGvC,MAAM,SAAS,KAAK,KAAK,MAAM;AAC7B,WAAO,KAAK,QAAQ,KAAK,KAAK,KAAK,QAAQ,MAAM,GAAG,MAAM;AAAA;AAAA,EAG5D,SAAS,SAAS,MAAM,MAAM,SAAS;AACrC,QAAI,SAAS,WAAW;AACtB,gBAAU,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,GAAG,UAAU;AACpD,YAAM,WAAW,KAAK,QAAQ;AAC9B,aAAO,SAAS,MAAM,EAAC,MAAO,UAAS,UAAU,UAAU,KAAK,KAAI,QAAQ,OAAO;AAAA;AAErF,WAAO,OAAO,KAAK,QAAQ,MAAM,QAAQ,MAAM,YAAY;AAAA;AAAA,EAG7D,OAAO,SAAS,MAAM,MAAM;AAC1B,WAAO,KAAK,QAAQ,MAAM,MAAM,MAAM;AAAA;AAAA;",
  "names": []
}
